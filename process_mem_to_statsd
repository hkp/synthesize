#!/bin/bash
#/
#/ Script to send a server's process's used memory to a StatsD server
#/ Written by: Harry Park
#/ Last Updated on: July 11, 2020
#----------------------------------------------------------------------

#/ Usage: ./process_mem_to_statsd.sh pid process_name
#/ pid - process id that will have its memory value in Kb sent to StatsD
#/ process_name - name of process
#/
#/ ENV Variables that are read to control output
#/ STATSD_SERVER - StasD server hostname or ip, defaults to localhost
#/ STATSD_PORT - StatsD port, defaults 8125
#/ STATSD_USE_UDP - use UDP instead of TCP, defaults to false

statsd_server="${STATSD_SERVER:-localhost}"
statsd_port="${STATSD_PORT:-8125}"


PROCESS=$1
PID=$2

# Get the memory used for a process from pmap, last line, strip the K character from the 2nd word
MEM_USED="$(sudo pmap "${PID}" 2>/dev/null \
               | tail -1 \
               | awk '/[0-9]K/{print substr($2, 0, length($2)-1)}')"

# Verify that we have a non-null memory greater than 0
if [[ -n "${MEM_USED}" && "${MEM_USED}" -gt 0 ]]; then

  # Format a string for StatsD, then send the data to StatsD via nc
  echo "Sending data ${PROCESS}:${MEM_USED} to ${statsd_server}:${statsd_port}"
  echo "$(hostname -s).${PROCESS}:${MEM_USED}|g" \
         | nc -w0 -u "${statsd_server}" "${statsd_port}"
fi
